{
    #
    # 01ibays -- configure virtual hosts to share ibays
    #

    eval { require esmith::AccountsDB; require esmith::NetworksDB; };
    
    if($@) {
	return '';
    }
	
    # The list of ibays shared among all vhosts:
    @ibays = ();
    
    my $accountsDb = esmith::AccountsDB->open_ro() || return '';
    my $networksDb = esmith::NetworksDB->open_ro() || return '';

    my %adb = $accountsDb->as_hash;
    my $localNetworks = join ' ', map { 
	my $u = $_; 
	$u =~ s:/255\.255\.255\.255::g; 
	$u;
    } $networksDb->local_access_spec;

    my @rootChecks = ();

    foreach my $ibayName (sort map {$_->key} $accountsDb->ibays) {

	my %ih = %{$adb{$ibayName}};

	# Skip if web access is not enabled
	if( ! defined $ih{HttpStatus} || $ih{HttpStatus} ne 'enabled') {
	    next;
	}

	my $vhostName = $ih{HttpVirtualHost};

	my $ibayConf = {
	    'Name' => $ibayName,
	    'Path' => '/var/lib/nethserver/ibay/' . $ibayName,
	    'Description' => $ih{Description} || '',
	    'Access' => $ih{HttpAccess} || 'private',
	    'PrivateAllow' => $localNetworks || '',
	    'PasswordStatus' => $ih{HttpPasswordStatus} || 'disabled',
	    'CgiBinStatus' => $ih{HttpCgiBinStatus} || 'disabled',
	    'Profile' => $ih{HttpProfileType} || 'default',
	    'ServerName' => $vhostName,
            'AllowUrlfOpen' => $ih{PhpAllowUrlfOpen} || 'enabled',
            'MemoryLimit'=> $ih{PhpMemoryLimit} || 'disabled',
            'UpMaxFileSize'=> $ih{PhpUpMaxFileSize} || 'disabled',
            'PostMaxSize'=> $ih{PhpPostMaxSize} || 'disabled',
            'MaxExecTime'=> $ih{PhpMaxExecTime} || 'disabled',
            'MaxFileUploads'=>$ih{PhpMaxFileUploads} || 'disabled',
	};

	if( ! defined $ih{HttpAliasType} || $ih{HttpAliasType} eq 'default') {
	    $ibayConf->{Alias} = $ibayName;
	    $ibayConf->{isDocumentRoot} = '';

	} elsif($ih{HttpAliasType} eq 'custom') {
	    $ibayConf->{Alias} = $ih{HttpAliasCustom};
	    $ibayConf->{isDocumentRoot} = '';

 	} elsif($ih{HttpAliasType} eq 'root') {
	    $ibayConf->{isDocumentRoot} = '1';

	    if($vhostName eq '__ANY__') {
		# Set the defaultDocumentRoot template variable:
		$defaultDocumentRoot = $ibayConf->{Path};
		push @rootChecks, $ibayName;
	    } else {
		# More than one ibay wants to be the DocumentRoot for $vhostName:
	        if( defined $vhosts{$vhostName}{DocumentRoot}) {
		    warn "[WARNING] $ibayName wants to override existing DocumentRoot " . 
			$vhosts{$vhostName}{DocumentRoot} .  " in vhost $vhostName\n";
		}
		$vhosts{$vhostName}{DocumentRoot} = $ibayConf->{Path};
	    }

	} else {
	    warn "[WARNING] Unknown HttpAliasType prop for ibay $ibayName\n";
	    next;
	}

	push @ibays, $ibayConf;

	if($vhostName ne '__ANY__') {
	    if( ! defined $vhosts{$vhostName}{Ibays} ) {
		$vhosts{$vhostName}{Ibays} = [];
	    }
	    push @{ $vhosts{$vhostName}{Ibays} }, $ibayConf;
	}
    }

    # Send a warning message if the configuration is inconsistent. No
    # more than 1 default document root can be set!
    if(scalar @rootChecks > 1) {
	warn "[WARNING] The following ibays want to set default DocumentRoot value: " . join(', ', @rootChecks) . ". Fix your Shared Folder configuration!\n";
    } 

    '';
}
